/* * Copyright (C) 2009 Jim Blackler jimblackler@gmail.com * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package net.jimblackler.quickcalendar;import android.app.Activity;import android.app.SearchManager;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.widget.Button;import android.widget.CheckBox;import android.widget.DatePicker;import android.widget.TextView;import net.jimblackler.Utils.TimeConstants;import java.util.Calendar;import java.util.Date;public class Search extends Activity {	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.search);		final DatePicker startDatePicker = (DatePicker) findViewById(R.id.StartDatePicker);		final DatePicker endDatePicker = (DatePicker) findViewById(R.id.EndDatePicker);		final Date startDate0 = new Date();		setPickerFromDate(startDatePicker, startDate0);		final Date endDate0 = new Date();		endDate0.setYear(endDate0.getYear() + 1);		setPickerFromDate(endDatePicker, endDate0);		final TextView textView = (TextView) findViewById(R.id.SearchText);		final CheckBox checkBox = (CheckBox) findViewById(R.id.SearchAllCalendars);		final SharedPreferences preferences = this.getPreferences(MODE_PRIVATE);		textView.setText(preferences.getString("query", ""));		checkBox.setChecked(preferences.getBoolean("search_all_calendars", false));		Button button = (Button) findViewById(R.id.SearchButton);		button.setOnClickListener(new OnClickListener() {			public void onClick(View v) {				Intent intent = new Intent(Search.this, MainActivity.class);				intent.setAction(Intent.ACTION_SEARCH);				intent.putExtra(SearchManager.QUERY, textView.getText().toString());				intent.putExtra("start_date", getDateFromPicker(startDatePicker).getTime());				intent.putExtra("end_date", getDateFromPicker(endDatePicker).getTime()						+ TimeConstants.MILLISECONDS_PER_DAY);				intent.putExtra("search_all_calendars", checkBox.isChecked());				SharedPreferences.Editor editor = preferences.edit();				editor.putString("query", textView.getText().toString());				editor.putBoolean("search_all_calendars", checkBox.isChecked());				editor.commit();				startActivity(intent);			}		});	}	private static Date getDateFromPicker(final DatePicker picker) {		Calendar cal = Calendar.getInstance();		cal.set(Calendar.YEAR, picker.getYear());		cal.set(Calendar.MONTH, picker.getMonth());		cal.set(Calendar.DAY_OF_MONTH, picker.getDayOfMonth());		cal.set(Calendar.HOUR_OF_DAY, 0);		cal.set(Calendar.MINUTE, 0);		cal.set(Calendar.SECOND, 0);		cal.set(Calendar.MILLISECOND, 0);		return cal.getTime();	}	private static void setPickerFromDate(final DatePicker picker, final Date date) {		Calendar cal = Calendar.getInstance();		cal.setTime(date);		picker.init(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH),				null);	}}